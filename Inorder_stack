Given a binary tree, return the inorder traversal of its nodes' values.

Example:

Input: [1,null,2,3]
   1
    \
     2
    /
   3

Output: [1,3,2]




Code .........................

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
 
 
class Solution {
    public List<Integer> inorderTraversal(TreeNode root) {
        
        List<Integer> list=new ArrayList();
        Stack<TreeNode> stack=new Stack();
        
        TreeNode top=root;
        
        while(top!=null || !stack.isEmpty())
        {
            while(top!=null)
            {
                stack.push(top);
                top=top.left;
            }
            
            top=stack.pop();
            list.add(top.val);
            top=top.right;
        }
return list;
    
    }
}
